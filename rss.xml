<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[dobedh | Feed]]></title><description><![CDATA[Blog Description]]></description><link>https://dobedh.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 01 Feb 2021 14:04:30 GMT</lastBuildDate><item><title><![CDATA[TIL-210201]]></title><description><![CDATA[3.6 Uploading and Creating a Video Video 파일만 업로드 받기  코드를 input에 추가 비디오 업로드시, 해당 비디오의 dir를 저장/불러오기 비디오를 직접 DB에 저장하면 너무 heavy해짐 이용해서, 비디오의 링크…]]></description><link>https://dobedh.github.io/TIL_32_210201/</link><guid isPermaLink="false">https://dobedh.github.io/TIL_32_210201/</guid><pubDate>Mon, 01 Feb 2021 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;36-uploading-and-creating-a-video&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#36-uploading-and-creating-a-video&quot; aria-label=&quot;36 uploading and creating a video permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[3.6] Uploading and Creating a Video&lt;/h1&gt;
&lt;h3 id=&quot;video-파일만-업로드-받기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#video-%ED%8C%8C%EC%9D%BC%EB%A7%8C-%EC%97%85%EB%A1%9C%EB%93%9C-%EB%B0%9B%EA%B8%B0&quot; aria-label=&quot;video 파일만 업로드 받기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Video 파일만 업로드 받기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;accept=&amp;quot;video/*&amp;quot;&lt;/code&gt; 코드를 input에 추가&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;비디오-업로드시-해당-비디오의-dir를-저장불러오기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B9%84%EB%94%94%EC%98%A4-%EC%97%85%EB%A1%9C%EB%93%9C%EC%8B%9C-%ED%95%B4%EB%8B%B9-%EB%B9%84%EB%94%94%EC%98%A4%EC%9D%98-dir%EB%A5%BC-%EC%A0%80%EC%9E%A5%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0&quot; aria-label=&quot;비디오 업로드시 해당 비디오의 dir를 저장불러오기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;비디오 업로드시, 해당 비디오의 dir를 저장/불러오기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;비디오를 직접 DB에 저장하면 너무 heavy해짐&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;multer&lt;/code&gt;이용해서, 비디오의 링크만 가져올수 있게 하자&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Multer is a node.js middleware for handling multipart/form-data, which is primarily used for uploading files. It is written on top of busboy for maximum efficiency.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;multer&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#multer&quot; aria-label=&quot;multer permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Multer&lt;/code&gt;는 이용자가 데이터를 upload드 할때, 이를 URL형태로 바꿔주고, 업로드하는 파일은 특정 dir에 저장하도록 해준다.&lt;/li&gt;
&lt;li&gt;따라서 우리가 view에 데이터를 뿌릴 때, multer가 만들어준 path(url) 정보를 끌어다가 쓰면 된다!&lt;/li&gt;
&lt;li&gt;즉, DB에는 multer가 생성한 데이터의 url 정보만을 저장한다! =&gt; Middleware다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;code-classlanguage-textmultercode-설치법&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#code-classlanguage-textmultercode-%EC%84%A4%EC%B9%98%EB%B2%95&quot; aria-label=&quot;code classlanguage textmultercode 설치법 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code class=&quot;language-text&quot;&gt;Multer&lt;/code&gt; 설치법&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;참고 : &lt;a href=&quot;https://www.npmjs.com/package/multer&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://www.npmjs.com/package/multer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;npm install multer&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;
&lt;p&gt;middleware파일에 import multer&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;import multer from &amp;quot;multer&amp;quot;;
const multerVideo = multer({dest : &amp;quot;videos/&amp;quot;});
export const uploadVideo = multerVideo.single(&amp;quot;videoFile&amp;quot;);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;
&lt;p&gt;multer를 사용할, 즉 이용자가 업로드할 form의 encoding type을 multer에 맞게 설정&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;form.upload(action=`/videos${routes.upload}`, method=&amp;quot;post&amp;quot;, enctype=&amp;quot;multipart/form-data&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;multer가 생성해주는 path정보를 받아서, Model(데이터 테이블?)의 schema에 맞게 넘겨준다. &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이떄, &lt;code class=&quot;language-text&quot;&gt;async&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;await&lt;/code&gt;를 사용해서, Video에 schema정보가 fully 저장되어 넘어가도록 한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;export const postUpload = async (req, res) =&amp;gt; {
const {
body : { title, description }, 
file : { path }
} = req;
const newVideo =  await Video.create({
fileUrl : path,
title : title,
description : description
})    
// todo : upload and save. // creat new id for uploaded video
res.render(&amp;quot;upload&amp;quot;, { pageTitle : &amp;quot;Upload&amp;quot; })
//res.redirect(routes.videoDetail(123123))
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;
&lt;p&gt;넘겨준 정보를, model.find()로 불러와서 뿌린다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;export const home = async (req, res) =&amp;gt; {
try {
const videos = await Video.find({})
console.log(videos)
res.render(&amp;quot;home&amp;quot;, { pageTitle: &amp;quot;Home&amp;quot;, videos})
} catch {
console.log(error)
res.render(&amp;quot;home&amp;quot;, { pageTitle: &amp;quot;Home&amp;quot;, videos})
}
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;37-uploading-and-creating-a-video-part-two&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#37-uploading-and-creating-a-video-part-two&quot; aria-label=&quot;37 uploading and creating a video part two permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[3.7] Uploading and Creating a Video part Two&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;비디오가 메인에서 재생이 안되는데, 되게해보자.&lt;/li&gt;
&lt;li&gt;&quot;uploads&quot; dir에 저장했는데, 이걸 routing 하는게 없어서임&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;app.use(&amp;quot;/uploads&amp;quot;, express.static(&amp;quot;uploads&amp;quot;))&lt;/code&gt; 사용&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;해당 경로로 왔을때, 현재 프로젝트 내의 uploads dir를 바라봐라는 것&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;38-getting-video-by-id&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#38-getting-video-by-id&quot; aria-label=&quot;38 getting video by id permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[3.8] Getting Video by ID&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;각 비디오를 클릭했을 때, 해당 비디오의 id를 가져와서, 해당 비디오의 detail 페이지에 보이도록 하기&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-클릭된-video의-id-가져오기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#1-%ED%81%B4%EB%A6%AD%EB%90%9C-video%EC%9D%98-id-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0&quot; aria-label=&quot;1 클릭된 video의 id 가져오기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. 클릭된 video의 id 가져오기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;req.params&lt;/code&gt; 사용&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;우리가 routes에서 생성한 &lt;code class=&quot;language-text&quot;&gt;:id&lt;/code&gt;값을 url에서 찾아서 가져와줌&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-해당-id에-해당하는-테이블-찾기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#2-%ED%95%B4%EB%8B%B9-id%EC%97%90-%ED%95%B4%EB%8B%B9%ED%95%98%EB%8A%94-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%B0%BE%EA%B8%B0&quot; aria-label=&quot;2 해당 id에 해당하는 테이블 찾기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. 해당 id에 해당하는 테이블? 찾기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;.findById&lt;/code&gt;로 params로 가져온 id값에 해당하는 model을 찾기&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;찾아낸 모델(video)를 이제, 렌더링할 videoDetail페이지에 보내서, 해당 비디오 내용만 랜더링&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;export const videoDetail = async (req, res) =&amp;gt; {
const {
    params : {id}
} = req;
try{
    const video = await Video.findById(id)
    res.render(&amp;quot;videoDetail&amp;quot;, { pageTitle : &amp;quot;Video Detail&amp;quot;, video})
} catch(error) {
    res.redirect(routes.home)
}
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[TIL-210131]]></title><description><![CDATA[윈도우 셋업 1.2 Chocolatey Chocolatey 설치하면, powershell에서 명령문으로 프로그램 설치가능 윈도우에서 번거로운 .exe 파일 받아서 실행할 필요 x 3.0 MongoDB and Mongoose MongoDB 설치 윈도우…]]></description><link>https://dobedh.github.io/TIL_31_210131/</link><guid isPermaLink="false">https://dobedh.github.io/TIL_31_210131/</guid><pubDate>Sun, 31 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;윈도우-셋업-12-chocolatey&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9C%88%EB%8F%84%EC%9A%B0-%EC%85%8B%EC%97%85-12-chocolatey&quot; aria-label=&quot;윈도우 셋업 12 chocolatey permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;윈도우 셋업 [1.2] Chocolatey&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Chocolatey 설치하면, powershell에서 명령문으로 프로그램 설치가능&lt;/li&gt;
&lt;li&gt;윈도우에서 번거로운 .exe 파일 받아서 실행할 필요 x&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;30-mongodb-and-mongoose&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#30-mongodb-and-mongoose&quot; aria-label=&quot;30 mongodb and mongoose permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[3.0] MongoDB and Mongoose&lt;/h1&gt;
&lt;h3 id=&quot;mongodb-설치&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#mongodb-%EC%84%A4%EC%B9%98&quot; aria-label=&quot;mongodb 설치 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MongoDB 설치&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;윈도우에서는 powershell에서 chocolatey 사용해서 설치해야함&lt;/li&gt;
&lt;li&gt;윈도우에서는, path 경로에 mongodb를 추가해줘야함&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;mongoose-설치&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#mongoose-%EC%84%A4%EC%B9%98&quot; aria-label=&quot;mongoose 설치 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mongoose 설치&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;MongoDB는 C++로 생성된 DB고, 우리 코드는 JS기 때문에 서로 소통 불가&lt;/li&gt;
&lt;li&gt;서로 소통 가능하도록 하는 adpater를 설치해야함 &lt;/li&gt;
&lt;li&gt;그것이 바로 Maongoose.&lt;/li&gt;
&lt;li&gt;설치 : &lt;code class=&quot;language-text&quot;&gt;npm install mongoose&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;dbjs에-mongoose-연결&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#dbjs%EC%97%90-mongoose-%EC%97%B0%EA%B2%B0&quot; aria-label=&quot;dbjs에 mongoose 연결 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;db.js에 Mongoose 연결&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;mongoose import&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;mongod 실행해서, port 확인하고, 해당 port로 mongoose.connect&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;db.once(opne)&lt;/code&gt; 설정&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;import mongoose from &amp;quot;mongoose&amp;quot;;

mongoose.connect(
    &amp;quot;mongodb://localhost:27017/we-tube&amp;quot;,
    {
        useNewUrlParser : true,
        userFindAndModify : false
    }
);

const db = mongoose.connection;

const handleOpen = () =&amp;gt; console.log(&amp;quot;✅ DB connected!&amp;quot;);
const handleError = (error) =&amp;gt; console.log(`Error in DB : ${error}`)


db.once(&amp;quot;open&amp;quot;, handleOpen)
db.on(&amp;quot;error&amp;quot;, handleError)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;dotenv-코드-삽입&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#dotenv-%EC%BD%94%EB%93%9C-%EC%82%BD%EC%9E%85&quot; aria-label=&quot;dotenv 코드 삽입 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;dotenv 코드 삽입&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이유 : 내 db경로등 민감한 정보를 이용자가 코드로 볼 수 없도록 처리&lt;/li&gt;
&lt;li&gt;방법&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;.env&lt;/code&gt;파일 생성    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;여기에 민감정보들을 넣어두고, 다른 js파일에서 변수로 끌어다 사용&lt;/li&gt;
&lt;li&gt;.env파일을 &lt;code class=&quot;language-text&quot;&gt;.gitignore&lt;/code&gt;에 넣는 것 잊지 말기&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;
&lt;p&gt;env 안 정보를 끌어올 파일에 import&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;import dotenv from &amp;quot;dotenv&amp;quot;;
dotenv.config();&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;process.env.KEYNAME&lt;/code&gt; 사용해서 env내 변수정보 가져오기&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;33-video-model&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#33-video-model&quot; aria-label=&quot;33 video model permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[3.3] Video Model&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Model : data를 가져오는 것. data의 타입 등에 대한 문서를 작성해둔다. &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;방법&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;models 디렉토리 생성&lt;/li&gt;
&lt;li&gt;Video.js 생성&lt;/li&gt;
&lt;li&gt;그 안에, model 변수 생성하여, data의 타입들을 작성해준다.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이걸 export해서, DB를 쓸 곳에 import 하면 끝&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;import mongoose, { Mongoose } from &amp;quot;mongoose&amp;quot;

const VideoSchema = new mongoose.Schema({
    title : {
        type : String,
        required : &amp;quot;Title is required&amp;quot;
    },
    description : String,
    views : {
        type : Number,
        default : 0
})

const model = mongoose.model(&amp;quot;Video&amp;quot;, VideoSchema);

export default model;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;35-home-controller-finished&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#35-home-controller-finished&quot; aria-label=&quot;35 home controller finished permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[3.5] Home Controller Finished&lt;/h1&gt;
&lt;h3 id=&quot;만든-model을-실제-controller에서-db로-넘기는법&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%A7%8C%EB%93%A0-model%EC%9D%84-%EC%8B%A4%EC%A0%9C-controller%EC%97%90%EC%84%9C-db%EB%A1%9C-%EB%84%98%EA%B8%B0%EB%8A%94%EB%B2%95&quot; aria-label=&quot;만든 model을 실제 controller에서 db로 넘기는법 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;만든 model을 실제 controller에서 db로 넘기는법&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;controller에서 해당하는 model을 import&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;import Video from &amp;quot;../models/Video&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;async&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;await&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;try &amp;amp; catch&lt;/code&gt; 사용&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;js에서는 특정 코드가 끝날때 까지 기다려주지 않고 다음 코드를 동시 실행하기 떄문에, DB에 있는 정보를 가져올때까지 기다리도록 하는 &lt;code class=&quot;language-text&quot;&gt;async&lt;/code&gt;와 &lt;code class=&quot;language-text&quot;&gt;await&lt;/code&gt;사용.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;try &amp;amp; catch&lt;/code&gt;는 우선 이 코드를 실행해보고, 에러가 뜨면 catch로 실행되돌 하는 것. &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;async 함수안에서 사용&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;export const home = async (req, res) =&amp;gt; {
try {
const videos = await Video.find({})
console.log(videos)
res.render(&amp;quot;home&amp;quot;, { pageTitle: &amp;quot;Home&amp;quot;, videos})
} catch {
console.log(error)
res.render(&amp;quot;home&amp;quot;, { pageTitle: &amp;quot;Home&amp;quot;, videos})
}
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[TIL-210130]]></title><description><![CDATA[Sangdami 세팅 코드 추가  install npm install pug app.set("view engine", "pug") views, layouts, partial dir 추가   세팅 url 변수화, import   생성 func 기능 모…]]></description><link>https://dobedh.github.io/TIL_30_210130/</link><guid isPermaLink="false">https://dobedh.github.io/TIL_30_210130/</guid><pubDate>Sat, 30 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;sangdami-세팅&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#sangdami-%EC%84%B8%ED%8C%85&quot; aria-label=&quot;sangdami 세팅 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sangdami 세팅&lt;/h1&gt;
&lt;h3 id=&quot;코드-추가&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%BD%94%EB%93%9C-%EC%B6%94%EA%B0%80&quot; aria-label=&quot;코드 추가 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;코드 추가&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;pug&lt;/code&gt; install&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;npm install pug&lt;/li&gt;
&lt;li&gt;app.set(&quot;view engine&quot;, &quot;pug&quot;)&lt;/li&gt;
&lt;li&gt;views, layouts, partial dir 추가 &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;routes&lt;/code&gt; 세팅&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;url 변수화, import &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;controllers&lt;/code&gt; 생성&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;func 기능 모두 controller로 받아오기&lt;/li&gt;
&lt;li&gt;pug views 생성후, controller에서 get 후 pug view로 .render&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;추가-정보&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%B6%94%EA%B0%80-%EC%A0%95%EB%B3%B4&quot; aria-label=&quot;추가 정보 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;추가 정보&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dobedh/sangdami&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://github.com/dobedh/sangdami&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[TIL-210129]]></title><description><![CDATA[Coding Challenge notion > 샌드박스 링크 오늘한 challenge 코드 업로드(비공개)]]></description><link>https://dobedh.github.io/TIL_29_210129/</link><guid isPermaLink="false">https://dobedh.github.io/TIL_29_210129/</guid><pubDate>Fri, 29 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;coding-challenge&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#coding-challenge&quot; aria-label=&quot;coding challenge permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coding Challenge&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;notion &gt; 샌드박스 링크&lt;/li&gt;
&lt;li&gt;오늘한 challenge 코드 업로드(비공개)&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[TIL-210128]]></title><description><![CDATA[url에 id값을 넘기는 법 routes에 단순 url을 기입하는것이 아니라, 아래와 같이 id가 있을 경우 변환하도록 설정 id 값이 있다면, 이걸 넘겨줘라! 라는 의미 post로 전달된 데이터 가져오는 법 controller에서 에 담겨져 온 것…]]></description><link>https://dobedh.github.io/TIL_28_210128/</link><guid isPermaLink="false">https://dobedh.github.io/TIL_28_210128/</guid><pubDate>Thu, 28 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#&quot; aria-label=&quot; permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h3 id=&quot;url에-id값을-넘기는-법&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#url%EC%97%90-id%EA%B0%92%EC%9D%84-%EB%84%98%EA%B8%B0%EB%8A%94-%EB%B2%95&quot; aria-label=&quot;url에 id값을 넘기는 법 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;url에 id값을 넘기는 법&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;routes에 단순 url을 기입하는것이 아니라, 아래와 같이 id가 있을 경우 변환하도록 설정&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;id 값이 있다면, 이걸 넘겨줘라! 라는 의미&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;const routes {
    videoDetail : (id) =&amp;gt; {
        if(id) {
            return `/videos/${id}`
        } else {
            return VIDEO_DETAIL
        }
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;post로-전달된-데이터-가져오는-법&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#post%EB%A1%9C-%EC%A0%84%EB%8B%AC%EB%90%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B0%80%EC%A0%B8%EC%98%A4%EB%8A%94-%EB%B2%95&quot; aria-label=&quot;post로 전달된 데이터 가져오는 법 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;post로 전달된 데이터 가져오는 법&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;controller에서 &lt;code class=&quot;language-text&quot;&gt;req.body&lt;/code&gt;에 담겨져 온 것을 확인하면 됨&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;const {
body = {data1, data2}
} = req;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;input-값을-필수로-기입하게-하는-법&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#input-%EA%B0%92%EC%9D%84-%ED%95%84%EC%88%98%EB%A1%9C-%EA%B8%B0%EC%9E%85%ED%95%98%EA%B2%8C-%ED%95%98%EB%8A%94-%EB%B2%95&quot; aria-label=&quot;input 값을 필수로 기입하게 하는 법 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;input 값을 필수로 기입하게 하는 법&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;input tag안에 &lt;code class=&quot;language-text&quot;&gt;required = true&lt;/code&gt;추가&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[TIL-210127]]></title><description><![CDATA[2.23 Join Controller postJoin, getJoin url이 get됐을때 페이지를 render하는 function과 페이지에서 정보를 post할때 부르는 function을 분리 해줌 bodyParser middleware로 심어뒀던…]]></description><link>https://dobedh.github.io/TIL_27_210127/</link><guid isPermaLink="false">https://dobedh.github.io/TIL_27_210127/</guid><pubDate>Wed, 27 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;223-join-controller&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#223-join-controller&quot; aria-label=&quot;223 join controller permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[2.23] Join Controller&lt;/h1&gt;
&lt;h3 id=&quot;postjoin-getjoin&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#postjoin-getjoin&quot; aria-label=&quot;postjoin getjoin permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;postJoin, getJoin&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;url이 get됐을때 페이지를 render하는 function과&lt;/li&gt;
&lt;li&gt;페이지에서 정보를 post할때 부르는 function을 분리 해줌&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;bodyparser&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#bodyparser&quot; aria-label=&quot;bodyparser permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;bodyParser&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;middleware로 심어뒀던 &lt;code class=&quot;language-text&quot;&gt;bodyParser&lt;/code&gt;가, 유저가 정보를 post 할때 쓰임&lt;/li&gt;
&lt;li&gt;유저가 post한 정보를 body object에 담아서 전달해줌&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-post한-정보를-어떻게-route할것인가&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#1-post%ED%95%9C-%EC%A0%95%EB%B3%B4%EB%A5%BC-%EC%96%B4%EB%96%BB%EA%B2%8C-route%ED%95%A0%EA%B2%83%EC%9D%B8%EA%B0%80&quot; aria-label=&quot;1 post한 정보를 어떻게 route할것인가 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. post한 정보를 어떻게 route할것인가?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;.post&lt;/code&gt;로 post된 정보를 가졍로 수 있음&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.get은 get된 정보를 받아오고&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;.pos는 post된 정보를 받아 routing 시킴&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;globalRouter.get(routes.join, getJoin);
globalRouter.post(routes.join, postJoin);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-post된-유저-정보-가져오기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#2-post%EB%90%9C-%EC%9C%A0%EC%A0%80-%EC%A0%95%EB%B3%B4-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0&quot; aria-label=&quot;2 post된 유저 정보 가져오기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. post된 유저 정보 가져오기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;post로 라우팅된 유저 정보는, 이로 인해 호출된 func의 req에 담긴다.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이 req의 body에 유저가 입력한 name, email, password 정보가 담김&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;export const postJoin = (req, res) =&amp;gt; {
const {
    body : {name, email, password, password2}
} = req;
if (password !== password2) {
    res.status(400);
    res.render(&amp;quot;Join&amp;quot;, { pageTitle : &amp;quot;Join&amp;quot; })
} else {
    res.redirect(routes.home)
}
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;3-join-후-홈으로-다시-보내기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#3-join-%ED%9B%84-%ED%99%88%EC%9C%BC%EB%A1%9C-%EB%8B%A4%EC%8B%9C-%EB%B3%B4%EB%82%B4%EA%B8%B0&quot; aria-label=&quot;3 join 후 홈으로 다시 보내기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. join 후 홈으로 다시 보내기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;res.redirect(경로)&lt;/code&gt; 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;224-log-in-and-user-profile-controller&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#224-log-in-and-user-profile-controller&quot; aria-label=&quot;224 log in and user profile controller permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[2.24] Log In and User Profile Controller&lt;/h1&gt;
&lt;h3 id=&quot;user-authentification-basic&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#user-authentification-basic&quot; aria-label=&quot;user authentification basic permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User authentification Basic&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;user정보를 middleware에 저장&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;user 정보가 true인지 체크한다&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;
&lt;p&gt;true일 경우, 해당 유저의 id 값을 가져온다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;routes에 있는, userDetail 값을 아래와 같이 object화&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;user에 id가 있는 경우, id값을 url로 보낸 값 return&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;const routes = {
userDetail : (id) =&amp;gt; {
if(id) {
    return `/users/${id}`
} else {
    return USERS_DETAIL
}
},
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[TIL-210126]]></title><description><![CDATA[2.20 Change Profile HTML BEM 사용법 https://en.bem.info/methodology/naming-convention/#naming-rules 2.21 Home Controller 홈화면에서, DB에 있는 데이터들을 가…]]></description><link>https://dobedh.github.io/TIL_26_210126/</link><guid isPermaLink="false">https://dobedh.github.io/TIL_26_210126/</guid><pubDate>Tue, 26 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;220-change-profile-html&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#220-change-profile-html&quot; aria-label=&quot;220 change profile html permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[2.20] Change Profile HTML&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;BEM 사용법&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.bem.info/methodology/naming-convention/#naming-rules&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://en.bem.info/methodology/naming-convention/#naming-rules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;221-home-controller&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#221-home-controller&quot; aria-label=&quot;221 home controller permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[2.21] Home Controller&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;홈화면에서, DB에 있는 데이터들을 가져와 하나씩 보여주기&lt;/li&gt;
&lt;li&gt;DB를 바로 구축하지말고 DB틀만 잡아두고, 어떻게 하는지 보자!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-dbjs-파일-생성&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#1-dbjs-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1&quot; aria-label=&quot;1 dbjs 파일 생성 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. db.js 파일 생성&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;파일 안에, 배열을 생성하고, 배열안에 object 생성하여 데이터 넣기&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;export const videos = [
{
    id : 123123,
    title : &amp;quot;The Coder, dobe&amp;quot;,
    description : &amp;quot;wowowow&amp;quot;,
    videoFile : &amp;quot;https://archive.org/download/ElephantsDream/ed_hd.avi&amp;quot;,
    creator : {
        id : 123123,
        name : &amp;quot;dobedh&amp;quot;,
        email : &amp;quot;dobedh@gmail.com&amp;quot;
    }
}
]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-db파일을-controller에서-import&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#2-db%ED%8C%8C%EC%9D%BC%EC%9D%84-controller%EC%97%90%EC%84%9C-import&quot; aria-label=&quot;2 db파일을 controller에서 import permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. db파일을 controller에서 import&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;해당 db를 사용할 controller에 저장된 db 파일을 import&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;
&lt;p&gt;import한 db 변수 값을, 넘겨줄 page에 변수값으로 전달&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;import { videos } from &amp;quot;../db&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;export const home = (req, res) =&gt; {
res.render(&quot;home&quot;, { pageTitle: &quot;Home&quot;, videos})
}&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;### 3. pug page에서 DB 전달 받아 쓰기
* `each item in videos`
* item은 아무거나 넣어도 상관 없음
* videos는 배열 명
* 배열 내 모든 값들에 대해서 특정 함수를 실행시킬 수 있음


# [2.22] Home Controller part Two
* 비디오 리스트가 홈에 뜨는 것을 다시 분절화 시킨다(모듈처럼)
* 요렇게, pug(html)의 일부를 분리해서 재사용하는 것을 `mixin`이라고 함. partial와 차이는..?
    * DB를 가져와 담는 차이일까? 여튼 확인 필요

### 1. view &amp;gt; mixins 생성
* 안에 videoBlock.js 생성

### 2. videoBlock.js 안에 비어있는 object를 포함한 func 생성
* 1) mixin으로 우선 함수를 만든다
* 2) 함수 안에 비어있는 object를 생성한다
* 3) 해당 object안에 넣을 변수 값을 설정한다&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;mixin videoBlock(video = {})
.videoBlock
video.videoBlock&lt;strong&gt;thumbnail(src=video.videoFile, controls=true)
h4.videoBlock&lt;/strong&gt;title=video.title
h6.videoBlock__views=video.views&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;### 3. videoBlock mixin을 붙일 pug에 inclue 시킨다
* 1) `include` 사용
* 2) mixin의 object안에 key 와 value를 추가
        * `+videoBlock`사용   
        * object안에 값들을 +한다는 의미겠지?
extends layouts/main
include mixins/videoBlock

block content
    .videos
        each item in videos
            +videoBlock( {
                title: item.title,
                views: item.description,
                videoFile: item.videoFile
            })

# 기타 
* video tag =&amp;gt; 비디오를 재생할 수 있게 해준다. 
* controls=true로 설정하면 재생버튼등이 생김
    ```
    video.videoBlock__thumbnail(src=video.videoFile, controls=true)
    ```
* textarea =&amp;gt; 넓은 input&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[TIL-210125]]></title><description><![CDATA[2.18 Search Controller 1 .Form으로 데이터 보내기 form  : form에 데이터가 입력되었을때, 보낼 url, 액션 등  : 은 form에 input된 데이터를 url값으로 넘김. post는 나중에 input  : defau…]]></description><link>https://dobedh.github.io/TIL_25_210125/</link><guid isPermaLink="false">https://dobedh.github.io/TIL_25_210125/</guid><pubDate>Mon, 25 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;218-search-controller&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#218-search-controller&quot; aria-label=&quot;218 search controller permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[2.18] Search Controller&lt;/h1&gt;
&lt;h2 id=&quot;1-form으로-데이터-보내기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#1-form%EC%9C%BC%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B3%B4%EB%82%B4%EA%B8%B0&quot; aria-label=&quot;1 form으로 데이터 보내기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1 .Form으로 데이터 보내기&lt;/h2&gt;
&lt;h3 id=&quot;form&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#form&quot; aria-label=&quot;form permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;form&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;action&lt;/code&gt; : form에 데이터가 입력되었을때, 보낼 url, 액션 등&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;method&lt;/code&gt; : &lt;code class=&quot;language-text&quot;&gt;get&lt;/code&gt;은 form에 input된 데이터를 url값으로 넘김. post는 나중에&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;input&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#input&quot; aria-label=&quot;input permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;input&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;placeholder&lt;/code&gt; : default로 쳐져있는 텍스트&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;type&lt;/code&gt; : 넣을 타입&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;name&lt;/code&gt; : input된 데이터를 담을 변수 명&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;methoed--get&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#methoed--get&quot; aria-label=&quot;methoed  get permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;methoed = &quot;get&quot;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;input에 넘겨진 value를 url에 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-reqquery로-데이터-받기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#2-reqquery%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%9B%EA%B8%B0&quot; aria-label=&quot;2 reqquery로 데이터 받기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. req.query로 데이터 받기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;search를 호출하는 controller funciton에서, &lt;code class=&quot;language-text&quot;&gt;req.qeury&lt;/code&gt;로 form에서 get된 데이터를 가져옴&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;아래 방식으로 가져오기 가능&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;--기존
const serachingBy = req.query.term

--최신
const {query : {
        term: searchingBy
}} = req.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;219-join--log-in-html&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#219-join--log-in-html&quot; aria-label=&quot;219 join  log in html permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[2.19] Join : Log In HTML&lt;/h1&gt;
&lt;h3 id=&quot;1-login-join-페이지에-form-추가&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#1-login-join-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90-form-%EC%B6%94%EA%B0%80&quot; aria-label=&quot;1 login join 페이지에 form 추가 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. login, join 페이지에 form 추가&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;input의 type을 eamil, password등으로 설정 가능&lt;/li&gt;
&lt;li&gt;action은 login 페이지로 이동하게&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-social-login-버튼&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#2-social-login-%EB%B2%84%ED%8A%BC&quot; aria-label=&quot;2 social login 버튼 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. social login 버튼&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;partial에 socialloin 버튼 추가. &lt;/li&gt;
&lt;li&gt;login, join pug에 include로 가져오기&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;기타&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EA%B8%B0%ED%83%80&quot; aria-label=&quot;기타 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;기타&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;|&lt;/code&gt;을 사용하면 pug에서, 제일 앞글자를 element가 아니라 text로 인식해줌&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;BEM&lt;/code&gt;이 뭐지? &lt;code class=&quot;language-text&quot;&gt;social--login&lt;/code&gt;이런식으로 class name부여하는 방식인듯&lt;/li&gt;
&lt;li&gt;카카오 클론 수업에서 다뤘다니까 찾아볼 필요&lt;/li&gt;
&lt;li&gt;backend할때는 backend만, front할때는 front만. 순차적으로&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;challenge&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#challenge&quot; aria-label=&quot;challenge permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Challenge&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;노션에 오늘의 challenge 코드 정리해둠&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[TIL-210124]]></title><description><![CDATA[2.12 recap  : 사용자 인증할때 쓰는 미들웨어  : 사용자가 보낸 정보를 검증하는 미들웨어  : log를 남겨주는 미들웨어 2.13 Installing Pug 란? html 코드를 훨씬 깔금하게 만들어주는 템플릿 https://www.npm…]]></description><link>https://dobedh.github.io/TIL_24_210124/</link><guid isPermaLink="false">https://dobedh.github.io/TIL_24_210124/</guid><pubDate>Sun, 24 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;212-recap&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#212-recap&quot; aria-label=&quot;212 recap permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[2.12] recap&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;coockie-parser&lt;/code&gt; : 사용자 인증할때 쓰는 미들웨어&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;body parser&lt;/code&gt; : 사용자가 보낸 정보를 검증하는 미들웨어&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;morgan&lt;/code&gt; : log를 남겨주는 미들웨어&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;213-installing-pug&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#213-installing-pug&quot; aria-label=&quot;213 installing pug permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[2.13] Installing Pug&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;Pug&lt;/code&gt;란?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;html 코드를 훨씬 깔금하게 만들어주는 템플릿&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/pug&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://www.npmjs.com/package/pug&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pug 초반 세팅&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;npm install pug&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;app.set(&amp;quot;view engine&amp;quot;, &amp;quot;pug&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;view 엔진으로 pug 확장자를 보겠다는 것&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;views&lt;/code&gt; 디렉토리 생성     &lt;/li&gt;
&lt;li&gt;view를 렌더링 할때, express는 &lt;code class=&quot;language-text&quot;&gt;views&lt;/code&gt; 디렉토리를 봄. &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;해당 디렉토리에, pug확장자 파일 생성&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;controller(func) 파일에서, &lt;code class=&quot;language-text&quot;&gt;res.render&lt;/code&gt;로 views 안의 pug파일 가져옴&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;214-layouts-with-pug&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#214-layouts-with-pug&quot; aria-label=&quot;214 layouts with pug permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[2.14] Layouts with Pug&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;pug layout 파일을 생성해서, 전체 html 파일들에 적용될 layout을 세팅하고 불러와서 씀&lt;/li&gt;
&lt;li&gt;layout관련 디렉토리 생성해서, main.pug 생성&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;해당 파일에서, 모든 파일에 적용될 레이아웃 코드 작성&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;block content 부분에, 각 파일의 코드가 삽입 될 예정&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;DOCTYPE
html
HTML 
title wetube
head
body
header  
    h2  Wetube
main
    block content&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;footer
span © dobedh&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;각 파일에, &lt;code class=&quot;language-text&quot;&gt;extends layouts/main&lt;/code&gt; 코드 상단에 작성&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;block contetn&lt;/code&gt;를 쓰고, 하위에 이제 해당 페이지에 넣을 코드 작성&lt;/li&gt;
&lt;li&gt;이렇게 하면, main.pug에 작성해둔 레이아웃 유지된 상태에서 block content에 각 페이지의 내용만 삽입됨.&lt;/li&gt;
&lt;li&gt;와우&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;215-partials-with-pug&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#215-partials-with-pug&quot; aria-label=&quot;215 partials with pug permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[2.15] Partials with Pug&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;footer, header 등 partially 들어가는 것들을 따로 템플릿화 해서 저장 가능&lt;/li&gt;
&lt;li&gt;위 main layout처럼 별도 파일 생성&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;해당 파일의 내용을, &lt;code class=&quot;language-text&quot;&gt;include /파일경로&lt;/code&gt; 코드 통해서 불러옴&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;body
include ../partials/header
main
    block content
include ../partials/footer&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;216-local-middelware&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#216-local-middelware&quot; aria-label=&quot;216 local middelware permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[2.16] local Middelware&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;다른 local 파일에 있는 코드들을 pug view에 끌어다 쓰는 법&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;res.locals&lt;/code&gt; 이용해서, pug에서 쓸수 있게 코드들을 내보내줌&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;방법&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B0%A9%EB%B2%95&quot; aria-label=&quot;방법 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;방법&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;로컬 미드웨어 추가 : &lt;code class=&quot;language-text&quot;&gt;app.use(localMiddleware)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;로컬 미드웨어 divide &amp;#x26; conquere : localmiddleware.js&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;해당 파일에서, &lt;code class=&quot;language-text&quot;&gt;res.locals.변수명&lt;/code&gt; 으로 내보낼 값들 설정&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;내보낸 값들을 pug에서 불러와서 쓰면 됨&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;localMiddleware.js&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;import routes from &amp;quot;./routes&amp;quot;;

export const localMiddelware = (req, res, next) =&amp;gt; {
    res.locals.siteName = &amp;quot;Wetube&amp;quot;;
    res.locals.routes = routes
    next()
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;header.pug&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;header.header
.header_column
    i.fab.fa-youtube
.header_column
    ul 
        li
            a(href=routes.join) join
        li
            a(href=routes.login) login&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;217-template-variables-in-pug&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#217-template-variables-in-pug&quot; aria-label=&quot;217 template variables in pug permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;[2.17] Template Variables in Pug&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;pug의 layout 템플릿에서 변수를 설정하고, 각 pug 페이지별 이 변수 값을 주는 방법&lt;/li&gt;
&lt;li&gt;즉, 각 pug별 고유한 변수 값을 전달하는 방법&lt;/li&gt;
&lt;li&gt;controller에서, 해당 pug page를 render할때, 변수 값을 전달한다&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;코드 &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;---controllers.js
export const home = (req, res) =&amp;gt; res.render(&amp;quot;Home&amp;quot;, { pageTitle: &amp;quot;Home&amp;quot; })
export const home = (req, res) =&amp;gt; res.render(&amp;quot;Home&amp;quot;, { pageTitle: &amp;quot;Home&amp;quot; })

---main.pug
HTML 
    head
        link(rel=&amp;quot;stylesheet&amp;quot;, href=&amp;quot;https://use.fontawesome.com/releases/v5.15.2/css/all.css&amp;quot;, integrity=&amp;quot;sha384-vSIIfh2YWi9wW0r9iZe7RJPrKwp6bG+s9QZMoITbCckVJqGCCRhc+ccxNcdpHuYu&amp;quot;, crossorigin=&amp;quot;anonymous&amp;quot;)
    title #{pageTitle} | #{siteName}    &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[TIL-210123]]></title><description><![CDATA[Project Setting - 복습 프로젝트 폴더 생성   해당 프로젝트에 대한 정보를 입력(author, project name, liscence... etc)  expressJS 사용할 수 있도록 express 설치 node modules 설치…]]></description><link>https://dobedh.github.io/TIL_23_210123/</link><guid isPermaLink="false">https://dobedh.github.io/TIL_23_210123/</guid><pubDate>Sat, 23 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;project-setting---복습&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#project-setting---%EB%B3%B5%EC%8A%B5&quot; aria-label=&quot;project setting   복습 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Setting - 복습&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;프로젝트 폴더 생성&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;npm init&lt;/code&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;해당 프로젝트에 대한 정보를 입력(author, project name, liscence... etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;npm install express&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;expressJS 사용할 수 있도록 express 설치&lt;/li&gt;
&lt;li&gt;node modules 설치되어, 기존 패키지들 활용 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;README.md 생성&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;해당 프로젝트 설명(github에서)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;.gitignore&lt;/code&gt; 생성&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;github 업로드시 업로드 안하고 무시할 코드/파일들 저장&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;6&quot;&gt;
&lt;li&gt;
&lt;p&gt;git remote add origin &lt;code class=&quot;language-text&quot;&gt;github저장소 url&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;github과 로컬의 해당 프로젝트 폴더를 연결&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;7&quot;&gt;
&lt;li&gt;기타 파일들 생성후, git add,commit 및 push&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item></channel></rss>