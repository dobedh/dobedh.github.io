{"componentChunkName":"component---src-templates-post-tsx","path":"/TIL_32_210201/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"36-uploading-and-creating-a-video\" style=\"position:relative;\"><a href=\"#36-uploading-and-creating-a-video\" aria-label=\"36 uploading and creating a video permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[3.6] Uploading and Creating a Video</h1>\n<h3 id=\"video-파일만-업로드-받기\" style=\"position:relative;\"><a href=\"#video-%ED%8C%8C%EC%9D%BC%EB%A7%8C-%EC%97%85%EB%A1%9C%EB%93%9C-%EB%B0%9B%EA%B8%B0\" aria-label=\"video 파일만 업로드 받기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Video 파일만 업로드 받기</h3>\n<ul>\n<li><code class=\"language-text\">accept=&quot;video/*&quot;</code> 코드를 input에 추가</li>\n</ul>\n<h3 id=\"비디오-업로드시-해당-비디오의-dir를-저장불러오기\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EB%94%94%EC%98%A4-%EC%97%85%EB%A1%9C%EB%93%9C%EC%8B%9C-%ED%95%B4%EB%8B%B9-%EB%B9%84%EB%94%94%EC%98%A4%EC%9D%98-dir%EB%A5%BC-%EC%A0%80%EC%9E%A5%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0\" aria-label=\"비디오 업로드시 해당 비디오의 dir를 저장불러오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비디오 업로드시, 해당 비디오의 dir를 저장/불러오기</h3>\n<ul>\n<li>비디오를 직접 DB에 저장하면 너무 heavy해짐</li>\n<li>\n<p><code class=\"language-text\">multer</code>이용해서, 비디오의 링크만 가져올수 있게 하자</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Multer is a node.js middleware for handling multipart/form-data, which is primarily used for uploading files. It is written on top of busboy for maximum efficiency.</code></pre></div>\n</li>\n</ul>\n<h3 id=\"multer\" style=\"position:relative;\"><a href=\"#multer\" aria-label=\"multer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Multer</h3>\n<ul>\n<li><code class=\"language-text\">Multer</code>는 이용자가 데이터를 upload드 할때, 이를 URL형태로 바꿔주고, 업로드하는 파일은 특정 dir에 저장하도록 해준다.</li>\n<li>따라서 우리가 view에 데이터를 뿌릴 때, multer가 만들어준 path(url) 정보를 끌어다가 쓰면 된다!</li>\n<li>즉, DB에는 multer가 생성한 데이터의 url 정보만을 저장한다! => Middleware다.</li>\n</ul>\n<h3 id=\"code-classlanguage-textmultercode-설치법\" style=\"position:relative;\"><a href=\"#code-classlanguage-textmultercode-%EC%84%A4%EC%B9%98%EB%B2%95\" aria-label=\"code classlanguage textmultercode 설치법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Multer</code> 설치법</h3>\n<ul>\n<li>참고 : <a href=\"https://www.npmjs.com/package/multer\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.npmjs.com/package/multer</a></li>\n<li>\n<ol>\n<li><code class=\"language-text\">npm install multer</code></li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>\n<p>middleware파일에 import multer</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import multer from &quot;multer&quot;;\nconst multerVideo = multer({dest : &quot;videos/&quot;});\nexport const uploadVideo = multerVideo.single(&quot;videoFile&quot;);</code></pre></div>\n</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>\n<p>multer를 사용할, 즉 이용자가 업로드할 form의 encoding type을 multer에 맞게 설정</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">form.upload(action=`/videos${routes.upload}`, method=&quot;post&quot;, enctype=&quot;multipart/form-data&quot;)</code></pre></div>\n</li>\n</ol>\n</li>\n<li>\n<ol start=\"4\">\n<li>multer가 생성해주는 path정보를 받아서, Model(데이터 테이블?)의 schema에 맞게 넘겨준다. </li>\n<li>\n<p>이떄, <code class=\"language-text\">async</code>, <code class=\"language-text\">await</code>를 사용해서, Video에 schema정보가 fully 저장되어 넘어가도록 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">export const postUpload = async (req, res) =&gt; {\nconst {\nbody : { title, description }, \nfile : { path }\n} = req;\nconst newVideo =  await Video.create({\nfileUrl : path,\ntitle : title,\ndescription : description\n})    \n// todo : upload and save. // creat new id for uploaded video\nres.render(&quot;upload&quot;, { pageTitle : &quot;Upload&quot; })\n//res.redirect(routes.videoDetail(123123))\n}</code></pre></div>\n</li>\n</ol>\n</li>\n<li>\n<ol start=\"5\">\n<li>\n<p>넘겨준 정보를, model.find()로 불러와서 뿌린다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">export const home = async (req, res) =&gt; {\ntry {\nconst videos = await Video.find({})\nconsole.log(videos)\nres.render(&quot;home&quot;, { pageTitle: &quot;Home&quot;, videos})\n} catch {\nconsole.log(error)\nres.render(&quot;home&quot;, { pageTitle: &quot;Home&quot;, videos})\n}\n}</code></pre></div>\n</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"37-uploading-and-creating-a-video-part-two\" style=\"position:relative;\"><a href=\"#37-uploading-and-creating-a-video-part-two\" aria-label=\"37 uploading and creating a video part two permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[3.7] Uploading and Creating a Video part Two</h1>\n<ul>\n<li>비디오가 메인에서 재생이 안되는데, 되게해보자.</li>\n<li>\"uploads\" dir에 저장했는데, 이걸 routing 하는게 없어서임</li>\n<li>\n<p><code class=\"language-text\">app.use(&quot;/uploads&quot;, express.static(&quot;uploads&quot;))</code> 사용</p>\n<ul>\n<li>해당 경로로 왔을때, 현재 프로젝트 내의 uploads dir를 바라봐라는 것</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"38-getting-video-by-id\" style=\"position:relative;\"><a href=\"#38-getting-video-by-id\" aria-label=\"38 getting video by id permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[3.8] Getting Video by ID</h1>\n<ul>\n<li>각 비디오를 클릭했을 때, 해당 비디오의 id를 가져와서, 해당 비디오의 detail 페이지에 보이도록 하기</li>\n</ul>\n<h3 id=\"1-클릭된-video의-id-가져오기\" style=\"position:relative;\"><a href=\"#1-%ED%81%B4%EB%A6%AD%EB%90%9C-video%EC%9D%98-id-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0\" aria-label=\"1 클릭된 video의 id 가져오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 클릭된 video의 id 가져오기</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">req.params</code> 사용</p>\n<ul>\n<li>우리가 routes에서 생성한 <code class=\"language-text\">:id</code>값을 url에서 찾아서 가져와줌</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-해당-id에-해당하는-테이블-찾기\" style=\"position:relative;\"><a href=\"#2-%ED%95%B4%EB%8B%B9-id%EC%97%90-%ED%95%B4%EB%8B%B9%ED%95%98%EB%8A%94-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%B0%BE%EA%B8%B0\" aria-label=\"2 해당 id에 해당하는 테이블 찾기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 해당 id에 해당하는 테이블? 찾기</h3>\n<ul>\n<li><code class=\"language-text\">.findById</code>로 params로 가져온 id값에 해당하는 model을 찾기</li>\n<li>\n<p>찾아낸 모델(video)를 이제, 렌더링할 videoDetail페이지에 보내서, 해당 비디오 내용만 랜더링</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">export const videoDetail = async (req, res) =&gt; {\nconst {\n    params : {id}\n} = req;\ntry{\n    const video = await Video.findById(id)\n    res.render(&quot;videoDetail&quot;, { pageTitle : &quot;Video Detail&quot;, video})\n} catch(error) {\n    res.redirect(routes.home)\n}\n}</code></pre></div>\n</li>\n</ul>","excerpt":"3.6 Uploading and Creating a Video Video 파일만 업로드 받기  코드를 input에 추가 비디오 업로드시, 해당 비디오의 dir를 저장/불러오기 비디오를 직접 DB에 저장하면 너무 heavy해짐 이용해서, 비디오의 링크…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/TIL_32_210201/#36-uploading-and-creating-a-video\">3.6 Uploading and Creating a Video</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/TIL_32_210201/#video-%ED%8C%8C%EC%9D%BC%EB%A7%8C-%EC%97%85%EB%A1%9C%EB%93%9C-%EB%B0%9B%EA%B8%B0\">Video 파일만 업로드 받기</a></li>\n<li><a href=\"/TIL_32_210201/#%EB%B9%84%EB%94%94%EC%98%A4-%EC%97%85%EB%A1%9C%EB%93%9C%EC%8B%9C-%ED%95%B4%EB%8B%B9-%EB%B9%84%EB%94%94%EC%98%A4%EC%9D%98-dir%EB%A5%BC-%EC%A0%80%EC%9E%A5%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0\">비디오 업로드시, 해당 비디오의 dir를 저장/불러오기</a></li>\n<li><a href=\"/TIL_32_210201/#multer\">Multer</a></li>\n<li><a href=\"/TIL_32_210201/#code-classlanguage-textmultercode-%EC%84%A4%EC%B9%98%EB%B2%95\"><code class=\"language-text\">Multer</code> 설치법</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/TIL_32_210201/#37-uploading-and-creating-a-video-part-two\">3.7 Uploading and Creating a Video part Two</a></li>\n<li>\n<p><a href=\"/TIL_32_210201/#38-getting-video-by-id\">3.8 Getting Video by ID</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/TIL_32_210201/#1-%ED%81%B4%EB%A6%AD%EB%90%9C-video%EC%9D%98-id-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0\">1. 클릭된 video의 id 가져오기</a></li>\n<li><a href=\"/TIL_32_210201/#2-%ED%95%B4%EB%8B%B9-id%EC%97%90-%ED%95%B4%EB%8B%B9%ED%95%98%EB%8A%94-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%B0%BE%EA%B8%B0\">2. 해당 id에 해당하는 테이블? 찾기</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/TIL_32_210201/"},"frontmatter":{"title":"TIL-210201","date":"Feb 01, 2021","tags":["JS","multer"],"keywords":["dobedh","Donghyun Kim"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/TIL_32_210201/","series":[],"lastmod":"2021-02-01"}},"staticQueryHashes":["2027115977","694178885"]}