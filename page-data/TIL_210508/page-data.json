{"componentChunkName":"component---src-templates-post-tsx","path":"/TIL_210508/","result":{"data":{"markdownRemark":{"html":"<h3 id=\"link---pathname-state\" style=\"position:relative;\"><a href=\"#link---pathname-state\" aria-label=\"link   pathname state permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Link - pathname, state</h3>\n<ul>\n<li>Link를 사용하면, pathname으로 연동될 url을 넣고</li>\n<li>state 안에 내가 전달하고 싶은 데이터를 넘길 수 있다(string,array,object 등)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    &lt;Link\n      to={{\n        pathname: &quot;/movie&quot;,\n        state: {\n          title,\n          year,\n          summary,\n          poster,\n          genres,\n        },\n      }}\n    &gt;</code></pre></div>\n<h3 id=\"component-안의-props\" style=\"position:relative;\"><a href=\"#component-%EC%95%88%EC%9D%98-props\" aria-label=\"component 안의 props permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Component 안의 props</h3>\n<ul>\n<li>모든 컴포넌트는 기본적으로 props를 전달 받아 가지고 있다(console안에서 확인 가능)</li>\n</ul>\n<h3 id=\"state안에-값이-있는지-없는지-체크하고-페이지-이동\" style=\"position:relative;\"><a href=\"#state%EC%95%88%EC%97%90-%EA%B0%92%EC%9D%B4-%EC%9E%88%EB%8A%94%EC%A7%80-%EC%97%86%EB%8A%94%EC%A7%80-%EC%B2%B4%ED%81%AC%ED%95%98%EA%B3%A0-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%9D%B4%EB%8F%99\" aria-label=\"state안에 값이 있는지 없는지 체크하고 페이지 이동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>state안에 값이 있는지 없는지 체크하고 페이지 이동</h3>\n<ul>\n<li>만약, 유저가 url직접 치고 들어와서 데이터가 없는 페이지로 간다면 다시 홈이나 다른 페이지로 redirect 해줄 필요</li>\n<li>이때 prpos 안에 있는 history 를 사용 가능</li>\n<li><code class=\"language-text\">props.history.push(&quot;url&quot;)</code> 이렇게하면, 해당 url로 redirect됨</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class Detail extends React.Component {\n  componentDidMount() {\n    const { location, history } = this.props;\n    if (location.state === undefined) {\n      history.push(&quot;/&quot;);\n    }\n  }\n  render() {\n    const { location } = this.props;\n    if (location.state) {\n      return &lt;span&gt;{location.state.title}&lt;/span&gt;;\n    } else {\n      return null;\n    }\n  }\n}</code></pre></div>\n<h3 id=\"기타\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%83%80\" aria-label=\"기타 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기타</h3>\n<ul>\n<li>현재 로컬에 문제가 생겼을 때, git remote에 있는 걸 clone 할 수 있음</li>\n<li>현재 로컬 버젼을, 깃헙에 있는 걸로 변경 : <code class=\"language-text\">git reset --hard commit한 버전 코드</code></li>\n<li>git pull로 병합 등등...</li>\n</ul>","excerpt":"Link - pathname, state Link를 사용하면, pathname으로 연동될 url을 넣고 state 안에 내가 전달하고 싶은 데이터를 넘길 수 있다(string,array,object 등) Component 안의 props 모든 컴포넌…","tableOfContents":"<ul>\n<li><a href=\"/TIL_210508/#link---pathname-state\">Link - pathname, state</a></li>\n<li><a href=\"/TIL_210508/#component-%EC%95%88%EC%9D%98-props\">Component 안의 props</a></li>\n<li><a href=\"/TIL_210508/#state%EC%95%88%EC%97%90-%EA%B0%92%EC%9D%B4-%EC%9E%88%EB%8A%94%EC%A7%80-%EC%97%86%EB%8A%94%EC%A7%80-%EC%B2%B4%ED%81%AC%ED%95%98%EA%B3%A0-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%9D%B4%EB%8F%99\">state안에 값이 있는지 없는지 체크하고 페이지 이동</a></li>\n<li><a href=\"/TIL_210508/#%EA%B8%B0%ED%83%80\">기타</a></li>\n</ul>","fields":{"slug":"/TIL_210508/"},"frontmatter":{"title":"TIL-210508","date":"May 08, 2021","tags":["react"],"keywords":["dobedh","Donghyun Kim"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/TIL_210508/","series":[{"slug":"/TIL_210317/","title":"TIL-210429","num":210317},{"slug":"/TIL_210502/","title":"TIL_210502","num":210502},{"slug":"/TIL_210503/","title":"TIL-210503","num":210503},{"slug":"/TIL_210504/","title":"TIL-210505","num":210504},{"slug":"/TIL_210505/","title":"TIL-210506","num":210505},{"slug":"/TIL_210506/","title":"TIL-210504","num":210506},{"slug":"/TIL_210507/","title":"TIL-210507","num":210507},{"slug":"/TIL_210508/","title":"TIL-210508","num":210508},{"slug":"/TIL_210509/","title":"TIL-210509","num":210509},{"slug":"/TIL_210512/","title":"TIL-210512","num":210512}],"lastmod":"2021-05-08"}},"staticQueryHashes":["2027115977","694178885"]}